#yml file for configuring application's infrastructure related docker images and starting containers
name: 'movie-booking-backend'
services:
  #Movie Service database
  movie-service-db:
    image: postgres:17-alpine
    container_name: movie-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m

  #Booking Service database
  booking-service-db:
    image: postgres:17-alpine
    container_name: booking-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "15442:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m

  #Notifications Service database
  notification-service-db:
    image: postgres:17-alpine
    container_name: notification-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "15452:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m

  #Rabbit MQ config - UI available at localhost:15672
  booking-rabbitmq:
    image: rabbitmq:4.0.9-management-alpine
    container_name: booking-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 500m

  #Mailhog - Sample Email Client for Demonstration purpose - UI available at localhost:8025
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.2
    container_name: keycloak
    command: [ 'start-dev' , '--http-port=8111' ]
    hostname: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin1234
    ports:
      - "8111:8111"
    deploy:
      resources:
        limits:
          memory: 2gb